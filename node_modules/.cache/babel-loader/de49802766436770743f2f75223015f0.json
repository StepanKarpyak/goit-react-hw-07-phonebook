{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';var contactsSlice=createSlice({name:'contacts',initialState:{items:[],filter:''},reducers:{addItems:function addItems(state,action){state.items.push(action.payload);},addFilter:function addFilter(state,action){state.filter=action.payload;},itemsDelete:function itemsDelete(state,action){state.items=state.items.filter(function(contact){return contact.id!==action.payload;});}}});var persistConfig={key:'root',storage:storage,whitelist:['items']};export var contactsReduser=persistReducer(persistConfig,contactsSlice.reducer);var _contactsSlice$action=contactsSlice.actions,addFilter=_contactsSlice$action.addFilter,addItems=_contactsSlice$action.addItems,itemsDelete=_contactsSlice$action.itemsDelete;export{addFilter,addItems,itemsDelete};export var getFilter=function getFilter(state){return state.contacts.filter;};export var getContacts=function getContacts(state){return state.contacts.items;};","map":{"version":3,"sources":["D:/githubgoit/goit-react-hw-07-phonebook/src/redux/contactsSlice.js"],"names":["createSlice","persistReducer","storage","contactsSlice","name","initialState","items","filter","reducers","addItems","state","action","push","payload","addFilter","itemsDelete","contact","id","persistConfig","key","whitelist","contactsReduser","reducer","actions","getFilter","contacts","getContacts"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,aAAa,CAAGH,WAAW,CAAC,CAChCI,IAAI,CAAE,UAD0B,CAEhCC,YAAY,CAAE,CACZC,KAAK,CAAE,EADK,CAEZC,MAAM,CAAE,EAFI,CAFkB,CAMhCC,QAAQ,CAAE,CACRC,QAAQ,CAAE,kBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC3BD,KAAK,CAACJ,KAAN,CAAYM,IAAZ,CAAiBD,MAAM,CAACE,OAAxB,EACD,CAHO,CAIRC,SAAS,CAAE,mBAACJ,KAAD,CAAQC,MAAR,CAAmB,CAC5BD,KAAK,CAACH,MAAN,CAAeI,MAAM,CAACE,OAAtB,CACD,CANO,CAORE,WAAW,CAAE,qBAACL,KAAD,CAAQC,MAAR,CAAmB,CAC9BD,KAAK,CAACJ,KAAN,CAAcI,KAAK,CAACJ,KAAN,CAAYC,MAAZ,CACZ,SAAAS,OAAO,QAAIA,CAAAA,OAAO,CAACC,EAAR,GAAeN,MAAM,CAACE,OAA1B,EADK,CAAd,CAGD,CAXO,CANsB,CAAD,CAAjC,CAsBA,GAAMK,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBjB,OAAO,CAAPA,OAFoB,CAGpBkB,SAAS,CAAE,CAAC,OAAD,CAHS,CAAtB,CAMA,MAAO,IAAMC,CAAAA,eAAe,CAAGpB,cAAc,CAC3CiB,aAD2C,CAE3Cf,aAAa,CAACmB,OAF6B,CAAtC,CAKA,0BAA8CnB,aAAa,CAACoB,OAA5D,CAAQT,SAAR,uBAAQA,SAAR,CAAmBL,QAAnB,uBAAmBA,QAAnB,CAA6BM,WAA7B,uBAA6BA,WAA7B,C,uCACP,MAAO,IAAMS,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAd,KAAK,QAAIA,CAAAA,KAAK,CAACe,QAAN,CAAelB,MAAnB,EAAvB,CACP,MAAO,IAAMmB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAhB,KAAK,QAAIA,CAAAA,KAAK,CAACe,QAAN,CAAenB,KAAnB,EAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n  reducers: {\r\n    addItems: (state, action) => {\r\n      state.items.push(action.payload);\r\n    },\r\n    addFilter: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n    itemsDelete: (state, action) => {\r\n      state.items = state.items.filter(\r\n        contact => contact.id !== action.payload\r\n      );\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['items'],\r\n};\r\n\r\nexport const contactsReduser = persistReducer(\r\n  persistConfig,\r\n  contactsSlice.reducer\r\n);\r\n\r\nexport const { addFilter, addItems, itemsDelete  } = contactsSlice.actions;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getContacts = state => state.contacts.items;\r\n"]},"metadata":{},"sourceType":"module"}