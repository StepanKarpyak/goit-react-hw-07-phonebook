{"ast":null,"code":"var _jsxFileName = \"D:\\\\githubgoit\\\\goit-react-hw-07-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addItems, getContacts } from 'redux/contactsSlice';\nimport { FormContainer, Label, Message, Button } from './ContactForm.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required().positive().integer()\n});\nexport default function ContactForm() {\n  _s();\n\n  const contactsRedux = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (_ref, _ref2) => {\n    let {\n      name,\n      number\n    } = _ref;\n    let {\n      resetForm\n    } = _ref2;\n    const contact = {\n      id: nanoid(),\n      name: name,\n      number: number\n    };\n\n    if (!contactsRedux.find(oldContact => oldContact.name.toLowerCase() === contact.name.toLowerCase())) {\n      dispatch(addItems(contact));\n    } else {\n      alert(`${contact.name} is already in contacts`);\n    }\n\n    resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      number: ''\n    },\n    onSubmit: handleSubmit,\n    validationSchema: schema,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            render: message => /*#__PURE__*/_jsxDEV(Message, {\n              children: \"wrong name format! use letters: A-Z, a-z, \\u0410-\\u042F, \\u0430-\\u044F,\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"tel\",\n            children: \"Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"tel\",\n            name: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"number\",\n            render: message => /*#__PURE__*/_jsxDEV(Message, {\n              children: \"wrong number format!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"Bsz7IONPSwS8R/XpwYJagE+jUXc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["D:/githubgoit/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["Formik","Form","Field","ErrorMessage","yup","useSelector","useDispatch","nanoid","addItems","getContacts","FormContainer","Label","Message","Button","schema","object","shape","name","string","required","number","positive","integer","ContactForm","contactsRedux","dispatch","handleSubmit","resetForm","contact","id","find","oldContact","toLowerCase","alert","message"],"mappings":"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","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { nanoid } from 'nanoid';\r\nimport { addItems, getContacts } from 'redux/contactsSlice';\r\nimport {\r\n  FormContainer,\r\n  Label,\r\n  Message,\r\n  Button,\r\n} from './ContactForm.styled';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  number: yup.number().required().positive().integer(),\r\n});\r\n\r\nexport default function ContactForm() {\r\n  const contactsRedux = useSelector(getContacts)\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = ({name, number}, {resetForm}) => {\r\n    const contact = {\r\n      id: nanoid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n        if (\r\n      !contactsRedux.find(\r\n        oldContact =>\r\n          oldContact.name.toLowerCase() === contact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      dispatch(addItems(contact));\r\n    } else {\r\n      alert(`${contact.name} is already in contacts`);\r\n    }\r\n    resetForm()\r\n  };\r\n\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: '', number: '' }}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={schema}\r\n    >\r\n      <FormContainer>\r\n        <Form autoComplete=\"off\">\r\n          <div>\r\n            <Label htmlFor=\"name\">Name</Label>\r\n            <Field type=\"text\" name=\"name\" />\r\n            <ErrorMessage\r\n              name=\"name\"\r\n              render={message => (\r\n                <Message>\r\n                  wrong name format!\r\n                  use letters: A-Z, a-z, А-Я, а-я,\r\n                </Message>\r\n              )}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Label htmlFor=\"tel\">Number</Label>\r\n            <Field type=\"tel\" name=\"number\" />\r\n            <ErrorMessage\r\n              name=\"number\"\r\n              render={message => (\r\n                <Message>\r\n                  wrong number format!\r\n                  \r\n                </Message>\r\n              )}\r\n            />\r\n          </div>\r\n          <Button type=\"submit\">Add contact</Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </Formik>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}